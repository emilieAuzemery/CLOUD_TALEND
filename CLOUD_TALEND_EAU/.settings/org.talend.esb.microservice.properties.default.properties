###
# Server HTTP port.
#
# User can set custom value in Talend Cloud / TMC task configuration
server.port=8065

######
## Context path of the application.
# server.servlet.context-path=/services

######
## Location of the logging configuration file. For instance,
##
##
logging.config=classpath:config/log4j2.xml

######
## Actuator Properties
##
## Spring Boot Actuator is a sub-project of the Spring Boot Framework. It uses HTTP endpoints to expose operational
## information about any running application. The main benefit of using this library is that we get health and monitoring
## metrics from production-ready applications.

## Management endpoint base path (for instance, '/management'). Requires a custom management.server.port.
# management.server.base-path=/mgmtsrv

## Management endpoint HTTP port (uses the same port as the application by default). Configure a different port to use management-specific SSL.
# management.server.port=8066

## Base path for Web endpoints. Relative to the servlet context path (server.servlet.context-path) or WebFlux base path
## (spring.webflux.base-path) when the management server is sharing the main server port. Relative to the management
## server base path (management.server.base-path) when a separate management server port (management.server.port) is configured.
management.endpoints.web.base-path=/

## Resolve the circular references issue of dependencies and beans
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true

## Available management endpoint IDs.
management.endpoints.web.exposure.include=info,health,jolokia,prometheus
management.info.java.enabled=true
management.endpoints.web.path-mapping.jolokia=jolokia


######
## Security properties
##
## 

## Auto-configuration classes to exclude.
spring.autoconfigure.exclude[0]=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
spring.autoconfigure.exclude[1]=org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration

## Default user name. Refers to SPRING_BOOT_SECURITY_USER_NAME environment variable by default.
spring.security.user.name=${SPRING_BOOT_SECURITY_USER_NAME:#{null}}

## Password for the default user name. Refers to SPRING_BOOT_SECURITY_USER_PASSWORD environment variable by default.
spring.security.user.password=${SPRING_BOOT_SECURITY_USER_PASSWORD:#{null}}
